{"version":3,"sources":["components/Form.js","components/DisplayWeather.js","App.js","index.js"],"names":["Form","props","className","onSubmit","e","changeRegion","placeholder","onChange","changeInput","target","value","DisplayWeather","weatherData","temperature","temperature_min","temperature_max","humidity","pressure","wind_speed","wind_deg","timezone","sunrise","sunset","descriptions","region","country","img","class","src","api_key","App","state","input","coordinations","latitude","undefined","longitude","weatherDetails","addInputData","event","setState","preventDefault","Axios","get","then","res","infoWeather","location","data","main","name","convertTemp","temp","temp_min","temp_max","wind","speed","deg","Date","sys","toLocaleTimeString","weather","icon","console","log","t","Math","floor","this","navSet","navigator","geolocation","getCurrentPosition","position","geoLoc","coords","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f0b70429.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function Form(props) {\r\n  return (\r\n    <div className=\"form-container\">\r\n      <div className=\"form-header\">\r\n        <h1 className=\"appname\">React weather app</h1>\r\n      </div>\r\n      <div className=\"form-input\">\r\n        <form className=\"region\" onSubmit={(e) => props.changeRegion(e)}>\r\n          <input\r\n            className=\"locationinput\"\r\n            placeholder=\"Enter a city...\"\r\n            onChange={(e) => {\r\n              props.changeInput(e.target.value);\r\n            }}\r\n          />\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function DisplayWeather(props) {\r\n  const {\r\n    temperature,\r\n    temperature_min,\r\n    temperature_max,\r\n    humidity,\r\n    pressure,\r\n    wind_speed,\r\n    wind_deg,\r\n    timezone,\r\n    sunrise,\r\n    sunset,\r\n    descriptions,\r\n    region,\r\n    country,\r\n    img,\r\n  } = props.weatherData;\r\n\r\n  return (\r\n    <div class=\"display-container\">\r\n      <div className=\"user-weather\">\r\n        <div className=\"weather-row\">\r\n          <div className=\"weather-upper\">\r\n            <div className=\"wfirst\">\r\n              <div className=\"wcountry\">\r\n                {region},&nbsp;&nbsp;{country}\r\n              </div>\r\n            </div>\r\n            <div className=\"wsecond\">\r\n              <div className=\"column-temp\">\r\n                {temperature}\r\n                <sup>o</sup>\r\n              </div>\r\n              <div className=\"column-icon\">\r\n                <img src={img} />\r\n              </div>\r\n            </div>\r\n            <div className=\"w-fix\"></div>\r\n            <div className=\"wthird\">\r\n              <div className=\"weather-desc\">{descriptions}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"weather-stats\">\r\n          <div className=\"stats-container\">\r\n            <div className=\"weather-row\">\r\n              <div className=\"weather-column\">\r\n                <span>High temperature:</span>\r\n                <span>{temperature_max}</span>\r\n              </div>\r\n              <div className=\"weather-column\">\r\n                <span>Pressure:</span>\r\n                <span>{pressure}</span>\r\n              </div>\r\n              <div className=\"weather-column\">\r\n                <span>Sunrise:</span>\r\n                <span>{sunrise}</span>\r\n              </div>\r\n            </div>\r\n            {/*row 1 end*/}\r\n            <div className=\"weather-row\">\r\n              <div className=\"weather-column\">\r\n                <span>Low temperature:</span>\r\n                <span>{temperature_min}</span>\r\n              </div>\r\n              <div className=\"weather-column\">\r\n                <span>Wind speed:</span>\r\n                <span>{wind_speed}</span>\r\n              </div>\r\n              <div className=\"weather-column\">\r\n                <span>Sunset:</span>\r\n                <span>{sunset}</span>\r\n              </div>\r\n            </div>\r\n            {/*row 2 end*/}\r\n            <div className=\"weather-row\">\r\n              <div className=\"weather-column\">\r\n                <span>Humidity:</span>\r\n                <span className=\"hum\">{humidity}</span>\r\n              </div>\r\n              <div className=\"weather-column\">\r\n                <span>Wind direction:</span>\r\n                <span>{wind_deg}</span>\r\n              </div>\r\n              <div className=\"weather-column\">\r\n                <span>Timezone:</span>\r\n                <span>{timezone}</span>\r\n              </div>\r\n            </div>\r\n            {/*row 3 end*/}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport Axios from \"axios\";\nimport \"./App.css\";\nimport Form from \"./components/Form.js\";\nimport DisplayWeather from \"./components/DisplayWeather.js\";\n\nconst api_key = \"7b66bccc6f3564d2b8f6fa998a70affd\";\n\nclass App extends React.Component {\n  state = {\n    input: \"\",\n    coordinations: {\n      latitude: undefined,\n      longitude: undefined,\n    },\n    weatherDetails: {},\n  };\n\n  convertTemp(t) {\n    let temp = Math.floor(t - 273.15);\n    return temp;\n  }\n\n  componentDidMount() {\n    this.navSet();\n  }\n\n  navSet() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        let geoLoc = {\n          latitude: position.coords.latitude,\n          longitude: position.coords.longitude,\n        };\n        this.setState({ coordinations: geoLoc });\n\n        Axios.get(\n          `https://api.openweathermap.org/data/2.5/weather?lat=${this.state.coordinations.latitude}&lon=${this.state.coordinations.longitude}&appid=${api_key}`\n        ).then((res) => {\n          let infoWeather = {\n            location: res.data.main.name,\n            temperature: this.convertTemp(res.data.main.temp),\n            temperature_min: this.convertTemp(res.data.main.temp_min),\n            temperature_max: this.convertTemp(res.data.main.temp_max),\n            humidity: res.data.main.humidity,\n            pressure: res.data.main.pressure,\n            wind_speed: res.data.wind.speed,\n            wind_deg: res.data.wind.deg,\n            timezone: res.data.timezone,\n            sunrise: new Date(res.data.sys.sunrise * 1000).toLocaleTimeString(),\n            sunset: new Date(res.data.sys.sunset * 1000).toLocaleTimeString(),\n            descriptions: res.data.weather[0].main,\n            region: res.data.name,\n            country: res.data.sys.country,\n\n            img:\n              \"http://openweathermap.org/img/wn/\" +\n              res.data.weather[0].icon +\n              \".png\",\n          };\n          console.log(res);\n          this.setState({ weatherDetails: infoWeather });\n        });\n      });\n    }\n  }\n\n  addInputData = (event) => {\n    this.setState({ input: event });\n  };\n\n  changeRegion = (e) => {\n    e.preventDefault();\n\n    Axios.get(\n      `https://api.openweathermap.org/data/2.5/weather?q=${this.state.input}&appid=${api_key}`\n    ).then((res) => {\n      let infoWeather = {\n        location: res.data.main.name,\n        temperature: this.convertTemp(res.data.main.temp),\n        temperature_min: this.convertTemp(res.data.main.temp_min),\n        temperature_max: this.convertTemp(res.data.main.temp_max),\n        humidity: res.data.main.humidity,\n        pressure: res.data.main.pressure,\n        wind_speed: res.data.wind.speed,\n        wind_deg: res.data.wind.deg,\n        timezone: res.data.timezone,\n        sunrise: new Date(res.data.sys.sunrise * 1000).toLocaleTimeString(),\n        sunset: new Date(res.data.sys.sunset * 1000).toLocaleTimeString(),\n        descriptions: res.data.weather[0].main,\n        region: res.data.name,\n        country: res.data.sys.country,\n\n        img:\n          \"http://openweathermap.org/img/wn/\" +\n          res.data.weather[0].icon +\n          \".png\",\n      };\n      console.log(res);\n      this.setState({ weatherDetails: infoWeather });\n    });\n  };\n\n  render() {\n    return (\n      <div\n        className={\n          this.state.weatherDetails.temperature < 12 ? \"App cold\" : \"App\"\n        }\n      >\n        <div className=\"container\">\n          <Form\n            changeRegion={this.changeRegion}\n            changeInput={this.addInputData}\n          />\n          <DisplayWeather weatherData={this.state.weatherDetails} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}